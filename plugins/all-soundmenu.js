let handler = async(m, { conn, text, args, usedPrefix, command }) => {
	let namop = ["Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
  "Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
  "Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
  "Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
  "Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
  "Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",
	"Sound ",

  ]
  
  let idop = [".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound",
  ".sound"
  ]
  
  let desop = ["Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound ",
  "Play Sound "
]
  let row = Object.keys(namop, desop, idop).map((v, index) => ({
	title: `${htki} ${dmenub} ${namop[v]}${1 + index} ${htka}`,
	description: `\nNo.${1 + index}\n${htjava}${desop[v]}${1 + index}\n${dmenuf}`,
	rowId: `${idop[v]}${1 + index}`
  }))
  let button = {
	buttonText: `☂️ ${command} Options Disini ☂️`,
	description: `⚡ Silakan pilih Sound di tombol di bawah...\n*Teks yang anda kirim:* ${text}\n\nKetik ulang *${usedPrefix + command}* teks anda untuk mengubah teks lagi`,
	footerText: wm
  }
	  return await conn.sendListM(m.chat, button, row, m)
	}
	handler.help = ['soundmenu']
	handler.tags = ['fun']
	handler.command = /^(soundmenu)/i
	
	
	export default handler